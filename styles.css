@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');

:root {
  --primary-color: #3a3f4b;        /* Soft charcoal for cards / main UI */
  --secondary-color: #5a6170;      /* Medium gray-blue for headers / nav */
  --accent-color: #4caf50;         /* Calming green for complete/add */
  --danger-color: #f25f5c;         /* Softer, friendly red for delete/errors */
  --blue: #08adf0;
  --background-color: #383c44;     /* Dark slate for gradients and backgrounds */
  --text-color: #f0f2f5;           /* Very light text for contrast */
  --bg:url('layered-waves-haikei.svg'); /* Background image for body */
  
  /* Shadow Variables */
  --shadow-main: 0 8px 20px rgba(0,0,0,0.4);
  --shadow-element: 0 4px 8px rgba(0,0,0,0.3);
  --shadow-small: 0 2px 4px rgba(0,0,0,0.3);
  --shadow-inset: inset 1px 1px 4px rgba(255,255,255,0.1), inset -1px -1px 2px rgba(0,0,0,0.4);
  --shadow-inset-light: inset 1px 1px 2px rgba(255,255,255,0.1), inset -1px -1px 2px rgba(0,0,0,0.4);
  --shadow-inset-subtle: inset 1px 1px 2px rgba(255,255,255,0.08), inset -1px -1px 2px rgba(0,0,0,0.4);
  --shadow-inset-minimal: inset 1px 1px 2px rgba(255,255,255,0.05), inset -1px -1px 2px rgba(0,0,0,0.4);
  --shadow-focus: 0 0 8px var(--background-color);
  --shadow-pseudo: 2px 2px 4px rgba(0,0,0,0.2), -2px -2px 4px rgba(255,255,255,0.1);
  --shadow-pseudo-hover: 2px 2px 4px rgba(0,0,0,0.3), inset -1px -1px 2px rgba(255,255,255,0.1);
}
.lightmode{
  --bg:url('layered-waves-haikei-light.svg'); /* Background image for body in light mode */
  --primary-color: #969dae;
  --secondary-color: #bec2cb;
  --accent-color: #39833c;
  --danger-color: #b71c1c;
  --blue: #05668d;   
  --background-color: #b7bbc4;
  --text-color: #222222;
}

::selection {
  background: var(--blue);
  color: var(--background-color);
}

body {
  font-family: 'Inter', sans-serif;
  background: var(--bg) no-repeat center center fixed;
  background-size: cover;
  color: var(--text-color);
  margin: 0;
  padding: 0;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transition: .3s ease;
}

html {
  scroll-behavior: smooth;
}

.top-container{
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  border-bottom: 1px solid var(--secondary-color);
  gap: 1.5rem;
}
/* Theme switch */
.switch {
  font-size: 17px;
  position: relative;
  display: inline-block;
  width: 3.5em;
  height: 2em;
}


/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgb(5, 102, 141);
  background: linear-gradient(
    63deg,
    var(--blue),
    rgba(66, 122, 161, 1) 36%,
    rgba(235, 242, 250, 1) 94%
  );
  background-size: 300% 300%;
  background-position: right center;
  transition: 0.5s cubic-bezier(0.24, 0.51, 0.32, 0.98);
  border-radius: 30px;
  box-shadow:
    inset 3px 3px 3px rgba(235, 242, 250, 0.42),
    inset -4px -4px 4px rgba(235, 242, 250, 0.42);
}

.slider:before {
  position: absolute;
  content: "";
  height: 1.4em;
  width: 1.4em;
  border-radius: 20px;
  left: 0.3em;
  bottom: 0.3em;
  background: linear-gradient(
    127deg,
    rgba(235, 242, 250, 1) 0%,
    rgba(137, 149, 164, 1) 66%,
    rgba(20, 30, 42, 1) 100%
  );
  background-size: 350% 250%;
  background-position: left center;
  box-shadow:
    3px 3px 4px rgba(100, 116, 133, 0.5),
    -3px -3px 4px rgba(235, 242, 250, 0.4);
  transition: 0.4s cubic-bezier(0.7, 0.34, 0.5, 1);
}

/* Animation for checked state */
.switch.active .slider {
  background-position: top left;
  box-shadow:
    inset 3px 3px 3px rgba(47, 88, 116, 0.7),
    inset -4px -4px 4px #067cab;
}

.switch.active .slider:before {
  transform: translateX(1.5em) scale(1.15);
  background-size: 380% 300%;
  background-position: right;
  box-shadow:
    3px 3px 4px #2f5874,
    -2px -2px 3px #067cab;
  animation: bounce 0.4s ease;
}

/* Animation for unchecked state */
.switch:not(.active) + .slider:before {
  animation: bounce-reverse 0.4s ease;
}

@keyframes bounce {
  0% {
    transform: translateX(0) scale(1);
  }
  50% {
    transform: translateX(1.7em) scaleX(0.8) scaleY(1.2);
  }
  75% {
    transform: translateX(1.45em) scaleX(1.1) scaleY(0.9);
  }
  100% {
    transform: translateX(1.5em) scale(1.15);
  }
}

@keyframes bounce-reverse {
  0% {
    transform: translateX(1.5em) scale(1.15);
  }
  50% {
    transform: translateX(-0.2em) scaleX(0.8) scaleY(1.2);
  }
  75% {
    transform: translateX(0.1em) scaleX(1.1) scaleY(0.9);
  }
  100% {
    transform: translateX(0) scale(1);
  }
}

h1 {
  text-align: center;
  margin: 0;
  padding-block: 1rem;
}

.main-container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background: rgba(var(--background-color), 0.8); /* semi-transparent background */
  backdrop-filter: blur(10px); /* subtle blur effect */
  border-radius: 2.4rem;
  box-shadow: var(--shadow-main);
  transition: all .3s ease-in-out
}

.todo-container {
  width: clamp(300px, 80vw, 1000px);
  min-height: 380px;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 2rem;
}

.todo-input-container,.task {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  width: 100%;
  flex-wrap: wrap;
  margin-bottom: 1rem;
}

#todo-input,.label {
  flex: 5; /* Take up remaining space */
  padding: 0.8rem 1rem;
  border: none;
  border-radius: 12px;
  background-color: var(--secondary-color);
  color: var(--text-color);
  font-size: 1.2rem;
  box-sizing: border-box;
  box-shadow: var(--shadow-small), var(--shadow-inset);
  transition: box-shadow 0.3s ease, transform 0.3s ease,.3s ease-out;
  white-space: pre-line; /* allow line breaks in input */
  word-break: break-word; /* break long words */
  overflow-wrap: break-word;
}

#todo-input,.label{
    height: 100%;
}

#todo-input::placeholder {
  color: var(--text-color);
}

textarea{
  resize: vertical;
}
.task{
  visibility: visible;
  opacity: 1;
  filter: blur(0);
  transform: translateY(0) scale(1);
  transition: .3s ease;
}

.fade-out{
  visibility: hidden;
  opacity: 0;
  filter: blur(4px);
  transform: translateY(12px) scale(.8);
}
input:focus,textarea:focus {
  outline: none;
  box-shadow: var(--shadow-focus), var(--shadow-inset-light);
}

input:focus:not([readonly]) {
  transform: scale(1.02);
}

#add-todo ,.remove-todo {
  flex-shrink: 0;
  width: 48px;
  height: 48px;
  background-color: var(--primary-color);
  color: var(--text-color);
  border: none;
  position: relative;
  border-radius: 12px;
  cursor: pointer;
  padding: 0; /* keep it square */
  box-shadow: var(--shadow-element), var(--shadow-inset-subtle);
  transition: all 0.3s ease;
}

.remove-todo {
  background-color: var(--danger-color);
}

#add-todo::before,
#add-todo::after,
.remove-todo::before,
.remove-todo::after  {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  background: linear-gradient(135deg, var(--background-color), var(--secondary-color));
  border-radius: 4px;
  transform: translate(-50%, -50%);
  transition: all 0.3s ease;
}

#add-todo::before,.remove-todo::before  {
  width: 12%;
  height: 60%;
  box-shadow: var(--shadow-pseudo);
}

#add-todo::after,.remove-todo::after  {
  width: 60%;
  height: 12%;
  box-shadow: var(--shadow-pseudo), var(--shadow-inset-light);
}

.remove-todo::before,.remove-todo::after {
    transform: translate(-50%, -50%) rotate(-45deg);
}

#add-todo:hover {
  background-color: var(--secondary-color);
  transform: scale(1.05);
}

#add-todo:active {
  background-color: var(--primary-color);
  transform: scale(0.95);
}

#add-todo:hover::before,
#add-todo:hover::after {
  box-shadow: var(--shadow-pseudo-hover);
}

#add-todo:hover::before{
    transform: translate(-50%, -50%) scaleY(1.2) ;
}

#add-todo:hover::after{
    transform: translate(-50%, -50%) scaleX(1.2) ;
}

#add-todo:active::before{
    transform: translate(-50%, -50%) scale(.9) ;
}

#add-todo:active::after{
    transform: translate(-50%, -50%) scale(.9) ;
}

.remove-todo:hover {
  transform: scale(1.05);
}

.remove-todo:active {
  transform: scale(0.95);
}

@media screen and (max-width: 600px) {
  html {
    font-size: 14px;
  }
  .todo-container {
    padding: 1.5rem;
  }
}

ul,li{
    list-style: none;
    width: 100%;
    padding: 0;
    margin: 0;
}

p,.task{
  margin: 0;
  font-size: 1.2rem;
}

.task{
  animation: .4s ease-in-out slideInFromBottom;
}

@keyframes slideInFromBottom {
  from {
    transform: translateY(12px) scale(.8);
    opacity: 0;
    filter: blur(6px);
  }
  to {
    transform: translateY(0) scale(1);
    opacity: 1;
    filter: blur(0);
  }
}

#todo-list{
  border-radius: 1rem;
  padding: 1rem;
  margin-top: 1.2rem;
  min-height: 150px;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  box-shadow: var(--shadow-small), var(--shadow-inset-minimal);
  box-sizing: border-box;
}

.checkbox-container {
  display: flex;
  align-items: center;
  cursor: pointer;
}

.checkbox-container label {
  cursor: pointer;
}

.checkbox input[type="checkbox"] {
  display: none; /* Hide the default checkbox */
}

.checkbox {
  width: 48px;
  height: 48px;
  background-color: transparent;
  border-radius: 12px;
  border: 2px solid var(--secondary-color);
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease, 0.2s border cubic-bezier(0.26, 0.62, 0.43, 1.06);
  cursor: pointer;
  box-shadow: var(--shadow-element), var(--shadow-inset-minimal);
}

.checkbox::before {
  content: "";
  position: absolute;
  top: 232%; /* Starts outside .background */
  left: 50%;
  transform: translate(-50%, -100%) scale(0.75); /* Scaled down initially */
  border-radius: 50% 20% / 30% 70%;
  width: 115%;
  height: 115%;
  filter: blur(4px);
  background: var(--accent-color);
  z-index: 1; /* Places the pseudo-element behind .download */
  transition: transform 0.56s cubic-bezier(0.5, 0.26, 0.7, 1.8), top 0.38s ease, filter 0.48s ease; /* Smooth position and scaling transitions */
}

.checkbox::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 75%;
  height: 75%;
  clip-path: polygon(
    41% 52%,
    26% 35%,
    10% 51%,
    37% 88%,
    37% 88%,
    37% 88%,
    37% 88%,
    91% 33%,
    78% 18%
  );
  background: var(--text-color);
  z-index: 1;
  opacity: 0; /* Initially hidden */
  transition: all 0.3s cubic-bezier(0.93, 0.17, 0.43, 1.07);
}

/* Use :has selector to target the checkbox when it's checked */
.checkbox-container:has(.checkbox input[type="checkbox"]:checked)
  .checkbox::before {
  top: 50%; /* Moves to the center of ` */
  transform: translate(-50%, -50%) scale(1); /* Fully fills the .download */
  filter: blur(0px);
}

/* Ensure the pseudo-element reacts to the checkbox state */
.checkbox-container:has(.checkbox input[type="checkbox"]:checked)
  .checkbox::after {
  opacity: 1;
  transform: translate(-50%, -50%) perspective(70px) scale(1);
  animation: checkmarkAnimation 0.5s ease-in-out forwards;
}

.checkbox:has(input[type="checkbox"]:checked) {
  border: 0px solid; /* Border disappears when checked */
}

@keyframes checkmarkAnimation {
  0% {
    opacity: 0;
    transform: perspective(70px) translate(10%, -20%) rotate(43deg)
      rotateY(100deg) scale(0);
  }
  50% {
    opacity: 1;
    transform: perspective(70px) translate(-57%, -42%) rotate(32deg)
      rotateY(55deg) scale(1.32);
  }
  100% {
    opacity: 1;
    transform: perspective(70px) translate(-50%, -50%) rotate(0deg)
      rotateY(0deg) scale(1);
  }
}

.task.done .label{
  color: lightslategray;
  text-decoration: line-through;
}

.label-container {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  flex: 1;
  position: relative;
}

.confirmation{
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  background: var(--secondary-color);
  border-radius: 12px;
  padding: 4px 8px;
  box-shadow: var(--shadow-element), var(--shadow-inset-minimal);
}

.confirmation  button{
    padding: 0;
  }

.confirmation button{
  width: 48px;
  height: 48px;
  font-size: 2rem;
  display: inline-block;
  fill: var(--text-color);
  stroke: var(--text-color);
  cursor: pointer;
  transition:  .3s ease;
}

/* filter */

.filter-container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  flex: 1;
  gap: 1rem;
  position: relative;
  background: var(--primary-color);
  height: 48px;
  border-radius: 12px;
  box-sizing: border-box;
  box-shadow: var(--shadow-element), var(--shadow-inset-minimal);
  cursor: pointer;
}

#selector{
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: .7rem;
  width: 100%;
  transition: .3s ease;
}

svg{
  width: 24px;
  height: 24px;
  stroke: var(--blue);
  transition: fill .3s ease;
}

.dropdown{
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: .8rem;
  position: absolute;
  width: 100%;
  top: 4rem;
  z-index: 10;
  background: var(--primary-color);
  border-radius: 12px;
  box-shadow: var(--shadow-element), var(--shadow-inset-minimal);
  padding: 1rem;
  transform: scale(.7) translateY(-12px);
  opacity: 0;
  visibility: hidden;
  filter: blur(9px);
  transition: all .3s ease;
}

.dropdown.active {
  transform: scale(1) translateY(0);
  opacity: 1;
  visibility: visible;
  filter: blur(0);
}

button{
  background: transparent;
  color: var(--text-color);
  border: none;
  font-size: 1.2rem;
  cursor: pointer;
}

.dropdown button {
  width: 100%;
  padding: 0.4rem;
  border-radius: 8px;
  transition: background .3s ease, color .3s ease;
}

.dropdown button:hover {
  color: var(--blue);
  background: var(--secondary-color);
  box-shadow: var(--shadow-small), var(--shadow-inset);
}

.hidden{
  display: none !important;
}

.error-label {
  color: var(--danger-color);
  background-color: rgba(242, 95, 92, 0.1);
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1000;
  font-size: 1.5rem;
  font-weight: bold;
  text-align: center;
  margin-top: 1rem;
  padding: 0.7rem;
  letter-spacing: 6px;
  border-radius: 8px;
  box-shadow: var(--shadow-small), var(--shadow-inset-minimal);
  transition: opacity 0.3s ease, visibility 0.3s ease, letter-spacing 0.4s ease, filter 0.3s ease;
  opacity: 0;
  visibility: hidden;
  filter: blur(4px);
  backdrop-filter: blur(10px);
}

.error-label.visible {
  opacity: 1;
  visibility: visible;
  filter: blur(0);
  letter-spacing: 1px;
}

body:has(.error-label.visible) .main-container {
  opacity: .6;
  filter: blur(4px);
  box-shadow: none;
}